const std = @import("std");
const expect = std.testing.expect;
const expectError = std.testing.expectError;

pub fn isTopLevelNodeModules(path: []const u8) !bool {
    const word: []const u8 = "node_modules";
    var count: usize = 0;

    var i: usize = 0;
    while (i < path.len) : (i += 1) {
        const found = std.mem.indexOf(u8, path[i..], word) orelse break;
        count += 1;
        i += found + word.len;
    }

    switch (count) {
        0 => return error.NotFound,
        1 => return true,
        else => return false,
    }
}

test "node_modules folder at top level" {
    const path = "/home/user/project/node_modules/";
    try expect(try isTopLevelNodeModules(path) == true);
}

test "node_modules folder not at top level" {
    const path = "/home/user/project/node_modules/some_folder/node_modules/";
    try expect(try isTopLevelNodeModules(path) == false);
}

test "node_modules folder not found" {
    const path = "/home/user/project/some_folder/";
    try expectError(error.NotFound, isTopLevelNodeModules(path));
}
